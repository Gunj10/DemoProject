{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = environment.serverName;\nexport let EmployeeService = /*#__PURE__*/(() => {\n  class EmployeeService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n\n    getEmployeeRecords() {\n      const url = API_URL + 'employees';\n      return this.httpClient.get(url).pipe(map(res => {\n        return res;\n      }), catchError(error => console.log(error)));\n    }\n\n    deleteEmployeeRecords(id) {\n      const url = API_URL + 'employees/' + id;\n      return this.httpClient.delete(url).pipe(map(res => {\n        return res;\n      }), catchError(error => console.log(error)));\n    }\n\n    addEmployeeRecords(employee) {\n      const url = API_URL + 'employees';\n      return this.httpClient.post(url, employee).pipe(map(res => {\n        return res;\n      }), catchError(error => console.log(error)));\n    }\n\n    updateEmployeeRecords(employee) {\n      const url = API_URL + 'employees/' + employee.id;\n      return this.httpClient.put(url, employee).pipe(map(res => {\n        return res;\n      }), catchError(error => console.log(error)));\n    }\n\n  }\n\n  EmployeeService.ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  EmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n  return EmployeeService;\n})();","map":null,"metadata":{},"sourceType":"module"}