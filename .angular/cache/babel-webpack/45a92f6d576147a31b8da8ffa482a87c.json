{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { Employee } from '../../models/employee';\nimport { EmployeeService } from '../../services/employee.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/material/toolbar\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(formBuilder, employeeService, router, toastr) {\n      this.formBuilder = formBuilder;\n      this.employeeService = employeeService;\n      this.router = router;\n      this.toastr = toastr;\n      this.employees = [];\n      this.employee = new Employee();\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        username: [''],\n        password: ['']\n      });\n    }\n\n    showEmployeeRecords() {\n      this.employeeService.getEmployeeRecords().subscribe(res => {\n        const user = res.find(a => {\n          return a.username === this.loginForm.value.username && a.password === this.loginForm.value.password;\n        });\n\n        if (user) {\n          this.router.navigate(['home']);\n          this.toastr.success('Login successfully');\n          console.log('login successfull');\n        } else {\n          this.toastr.error('Incorrect Username or Password');\n          console.log('login failed');\n        }\n\n        this.employee = res;\n        this.dataSource = res;\n      });\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[\"color\", \"primary\"], [\"fxLayoutAlign\", \"center center\", \"fxFlexFill\", \"\", 1, \"pageBackground\"], [\"fxFlex\", \"25\"], [\"fxLayoutAlign\", \"stretch\", \"fxLayout\", \"column\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"username\", \"matInput\", \"\", \"placeholder\", \"Username\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n        i0.ɵɵtext(1, \" Welcome to Demo Project \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"mat-card\", 2);\n        i0.ɵɵelementStart(4, \"mat-toolbar\", 0);\n        i0.ɵɵtext(5, \" Login Page \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.showEmployeeRecords();\n        });\n        i0.ɵɵelementStart(7, \"mat-form-field\");\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\");\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵtext(12, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    directives: [i5.MatToolbar, i6.DefaultLayoutAlignDirective, i6.FlexFillDirective, i7.MatCard, i6.DefaultFlexDirective, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i6.DefaultLayoutDirective, i1.FormGroupDirective, i8.MatFormField, i1.DefaultValueAccessor, i9.MatInput, i1.NgControlStatus, i1.FormControlName, i10.MatButton],\n    styles: [\".pageBackground[_ngcontent-%COMP%]{background-color:gray}.card[_ngcontent-%COMP%]{max-width:400px}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}